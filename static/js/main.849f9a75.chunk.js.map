{"version":3,"sources":["components/Algorithms.js","components/Home.js","index.js"],"names":["Algorithms","category","detail","numberOfProblem","className","Home","state","categories","this","setState","id","getCategory","href","alt","map","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAuBeA,MAnBf,YAA0D,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,gBACrC,OAAO,sBAAKC,UAAU,WAAf,UACL,oBAAIA,UAAU,kBAAd,SAAiCH,IACjC,mBAAGG,UAAU,oBAAb,SAAkCF,IAClC,qBAAIE,UAAU,kBAAd,UACE,oBAAIA,UAAU,cAAd,iCACA,oBAAIA,UAAU,cAAd,SAA6BD,WC6EpBE,E,4MAlFbC,MAAQ,CACNC,WAAY,I,iDAGd,WA6BEC,KAAKC,SAAS,CAAEF,WA5BG,CACjB,CACEG,GAAI,EACJT,SAAU,eACVE,gBAAiB,GACjBD,OAAQ,6NAEV,CACEQ,GAAI,EACJT,SAAU,qBACVE,gBAAiB,GACjBD,OAAQ,kIAEV,CACEQ,GAAI,EACJT,SAAU,eACVE,gBAAiB,GACjBD,OAAQ,uIAEV,CAACQ,GAAI,EAAGT,SAAU,eAAME,gBAAiB,GAAID,OAAQ,gJACrD,CAACQ,GAAI,EAAGT,SAAU,kCAAUE,gBAAiB,GAAID,OAAQ,6MACzD,CACEQ,GAAI,EACJT,SAAU,eACVE,gBAAiB,GACjBD,OAAQ,sI,+BAMd,WACEM,KAAKG,gB,oBAGP,WAAU,IACAJ,EAAeC,KAAKF,MAApBC,WACR,OACE,sBAAKH,UAAU,MAAf,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,gBAAd,qBACA,qBAAKA,UAAU,SAAf,SACE,qBAAIA,UAAU,oBAAd,UACE,oBAAIA,UAAU,eAAd,SAA6B,mBAAGQ,KAAK,KAAKC,IAAI,IAAjB,wCAC7B,oBAAIT,UAAU,eAAd,SAA6B,mBAAGQ,KAAK,KAAKC,IAAI,IAAjB,yCAC7B,oBAAIT,UAAU,eAAd,SAA6B,mBAAGQ,KAAK,KAAKC,IAAI,IAAjB,4BAC7B,oBAAIT,UAAU,eAAd,SAA6B,mBAAGQ,KAAK,KAAKC,IAAI,IAAjB,uCAGjC,qBAAKT,UAAU,eAKjB,+BACE,qBAAKA,UAAU,sBAAf,SACGG,EAAWO,KAAI,SAAAb,GAAQ,OACtB,cAAC,EAAD,CAEES,GAAIT,EAASS,GACbT,SAAUA,EAASA,SACnBC,OAAQD,EAASC,OACjBC,gBAAiBF,EAASE,iBAJrBF,EAASS,WAStB,iCACE,iC,GA1ESK,IAAMC,WCAzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.849f9a75.chunk.js","sourcesContent":["import React from 'react'\r\nimport propTypes from 'prop-types'\r\nimport './Algorithms.css'\r\n\r\nfunction Algorithms({category, detail, numberOfProblem}) {\r\n  return <div className=\"category\">\r\n    <h3 className=\"category__title\">{category}</h3>\r\n    <p className=\"category__details\">{detail}</p>\r\n    <ul className=\"category__group\">\r\n      <h4 className=\"group__item\">문제 수</h4>\r\n      <li className=\"itemsNumber\">{numberOfProblem}</li>\r\n    </ul>\r\n  </div>\r\n}\r\n\r\nAlgorithms.propTypes = {\r\n  id: propTypes.number.isRequired,\r\n  category: propTypes.string.isRequired,\r\n  detail: propTypes.string.isRequired,\r\n  numberOfProblem: propTypes.number.isRequired,\r\n\r\n}\r\n\r\nexport default Algorithms","import React from 'react'\r\nimport './Home.css'\r\nimport Algorithms from './Algorithms'\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    categories: []\r\n  }\r\n\r\n  getCategory() {\r\n    const categories = [\r\n      {\r\n        id: 1, \r\n        category: \"힙(Heap)\", \r\n        numberOfProblem: 40, \r\n        detail: \"힙은 특정한 규칙을 가지는 트리로, 힙을 이용해서 우선순위 큐를 구현할 수 있습니다.\"\r\n      },\r\n      {\r\n        id: 2, \r\n        category: \"탐욕법\", \r\n        numberOfProblem: 50, \r\n        detail: \"부분적인 최적해가 전체적인 최적해가 되는 마법!\"\r\n      },\r\n      {\r\n        id: 3, \r\n        category: \"탐색\", \r\n        numberOfProblem: 40, \r\n        detail: \"LIFO, FIFO, push & pop! 스택과 큐를 이용해서 문제를 풀어보세요.\"\r\n      },\r\n      {id: 4, category: \"해시\", numberOfProblem: 30, detail: \"해시는 Key-value쌍으로 데이터를 저장하는 자료구조입니다.\"},\r\n      {id: 5, category: \"동적 계획법\", numberOfProblem: 20, detail: \"불필요한 계산을 줄이고, 효율적으로 최적해를 찾아야만 풀리는 문제들입니다.\"},\r\n      {\r\n        id: 6, \r\n        category: \"정렬\", \r\n        numberOfProblem: 20, \r\n        detail: \"정렬을 이용해서 문제를 효율적으로 풀어보세요.\"\r\n      }\r\n    ]\r\n    this.setState({ categories })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCategory()\r\n  }\r\n\r\n  render() {\r\n    const { categories } = this.state\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App__header\">\r\n          <h1 className=\"header__title\">AlgoHub</h1>\r\n          <nav className=\"navbar\">\r\n            <ul className=\"navbar__container\">\r\n              <li className=\"navbar__item\"><a href=\"#!\" alt=\"a\">알고리즘</a></li>\r\n              <li className=\"navbar__item\"><a href=\"#!\" alt=\"b\">멘토/멘티</a></li>\r\n              <li className=\"navbar__item\"><a href=\"#!\" alt=\"b\">랭킹</a></li>\r\n              <li className=\"navbar__item\"><a href=\"#!\" alt=\"c\">게시판</a></li>\r\n            </ul>\r\n          </nav>\r\n          <div className=\"profile\">\r\n            \r\n          </div>\r\n\r\n        </header>\r\n        <main>\r\n          <div className=\"category__container\">\r\n            {categories.map(category =>\r\n              <Algorithms\r\n                key={category.id}\r\n                id={category.id}\r\n                category={category.category}\r\n                detail={category.detail}\r\n                numberOfProblem={category.numberOfProblem}\r\n                >\r\n              </Algorithms>)}\r\n          </div>\r\n        </main>\r\n        <footer>\r\n          <div>\r\n            \r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './components/Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}